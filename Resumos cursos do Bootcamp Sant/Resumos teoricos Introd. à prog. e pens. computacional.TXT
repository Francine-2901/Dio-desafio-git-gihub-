*Pensamento Computacional
Processo de pensamento envolvido na expressão de soluções em passos computacionais ou algoritmos que podem ser implementados no computador.

Decomposição - Dividir um problema complexo em subproblemas - Ex: Um quebra-cabeça, ao iniciar a montagem podemos separar as bordas, as cores, o formato, usando a lógica para montar de forma completa.

Reconhecimento de padrões - identificar padrões ou tendências, similaridade e diferenças entre os problemas - Ex: Padrão comportamental, as bolinhas claras têm tamanhos diferentes das mais escuras.

Abstração - Extrapolar o conceito do problema para uma forma generalista - Ex. Classes…, exemplo de medir a circunferência da garrafa, pode usar com generalista para outros círculos.

Design de algoritmos - Automatiza, Definir passo a passo a solução do problema.
Input > Operador > Output

*Raciocínio Lógico - É uma forma de pensamento estruturado, ou raciocínio, que permite encontrar a conclusão ou determinar a resolução de um problema.

*Classificação:

Indução: Fenômeno de observação, induz leis e teoria a partir da observação, ciências experimentais, Ex. pólvora descoberta por acidente na China, estava sendo feita alquimia e por parte experimental foi descoberta a pólvora.

Dedução: Inverso da indução, previsões e explicações, ciências exatas, leis e teorias induzem as previsões e explicações. Ex. cálculos matemáticos, provar por cálculos o resultado X.

Abdução: A partir de uma observação, conclui outra. Ex. A grama está molhada, logo deve ter chovido. Conclusão > Premissa. Usada em diagnósticos, processo investigativo, se existe um corpo, se a casa foi arrombada…

Ex. Teste de raciocínio, pai, mãe, filha e filho…locais na mesa, com os fatos colocados logicamente, sabemos o resultado e quem é quem.

*Pilares:
Decomposição
“Dado um problema complexo, devemos quebrá-lo em problemas menores. Portanto, problemas mais fáceis e gerenciáveis” Realizar exame detalhado.
Separar parte por parte um problema, buscar soluções para cada parte de forma que faça sentido nas outras partes e juntar de maneira coerente e eficiente.

Padrões
Reconhecimento de padrões: Modelo base, Estrutura invariante, Repetição. As similaridades e diferenças, entre os contextos e objetos.
Conceito associado ao objeto, armazenar esses dados para consultas posteriores, com isso, “cria” regras de decisão.

Abstração
Generalização/ Abstração - Generalização, na lógica, é a operação intelectual que consiste em reunir numa classe geral, um conjunto de seres ou fenômenos similares. Ex. triângulo, círculo e quadrado, são diferentes mas todos são formas geométricas

Algoritmos
No processamento de dados, o computador recebe, manipula e armazena dados, conforme o programa de instruções.
O processo de resolução de problemas “step by step”. 

*Desenvolvimento do programa:
Análise - Estudo e definição dos dados de entrada e saída.
Algoritmo - Descreve o problema por meio de ferramentas narrativas, fluxograma, ou pseudocódigo.
Codificação - O algoritmo é codificado de acordo com a linguagem de programação escolhida.

Ex. Preparar um sanduíche, Trocar uma lâmpada, Fazer uma receita de bolo, trajeto de casa para o trabalho.

*Como construir um algoritmo?

Compreensão do problema;
Definição dados de entrada;
Definir processamento;
Definir dados de saída;
Utilizar um método de construção;
Teste e diagnóstico.

*Construção de algoritmos:

Narrativa - Utilizada da linguagem natural,  sem conceitos novos, pode fornecer diversas interpretações possíveis.

Fluxograma - Estrutura gráfica com símbolos pré-definidos, que define o tipo de ação que será executada. Simples entendimento, conhecimento prévio da estrutura e símbolos.

Pseudocódigo - Portugol, regras definidas, passos a serem seguidos.

Ex. Médias de alunos, para ver se foi aprovado ou reprovado


*O que é Lógica?
Forma de raciocínio, forma como desencadeiam acontecimentos, organização coesa, ordenação que segue convenções.

Organização e planejamento das instruções, assertivas em um algoritmo, a fim de viabilizar a implantação de um programa. Ex. preparar um café da manhã, precisa de uma organização algorítmica/ o passo a passo para preparar.

*Técnicas de lógica de programação:

Técnica linear:
Execução sequenciada, ordenação de elemento por uma única propriedade.
Ex. Acordar > Ir cozinha > Tomar café > Parar para ver notícia.

Técnica estruturada:
Organização, disposição e ordem dos elementos essenciais que compõem um corpo (concreto ou abstrato). Tem mais complexidade, mas tem variedades, acarretando uma série de vantagens.
Ex:Acordar > Ir cozinha > Tomar café ou tomar suco > Parar para ver notícia.

Técnica modular:
Partes independentes, que são controladas por um conjunto de regras.
Dados de entrada > Processo de transformação > Dados de saída.
Consegue a simplificação, Decompor o problema e fazer a verificação por módulo/partes, ver só a parte específica

Módulo preparar para acordar -  levantar fazer higiene pessoal, se arrumar >
Módulo Ir cozinha -  caminhar ou descer escadas >
Módulo preparar bebida e comida - preparar pão, suco, café >
Módulo tomar café da manhã - tomar café, comer pão, ler notícias.

*Tipos de dados:

Numéricos - Inteiros (sem casas decimais) e reais (com casas decimais).

Caracteres - Tudo que não se representa como número, pode ter número mas não representa a função de um. Ex: “Programação”, “KU*&NH53g”...

Lógicos -  A lógica Booleano, tem apenas 2 tipos Verdadeiro ou Falso.
Ex. Em português .Verdadeiro .V ou .S/  .Falso .F ou .N


*O que é uma variável:

É um tipo de estrutura mutável que pode variar dentro do seu valor, é inconstante, incerta, instável…Pode assumir qualquer um dos valores de um determinado conjunto de valores.
Ex. a - b = d/ a + b = c

Instruções primitivas:
Instruções são linguagens de palavras-chave de uma determinada programação que tem por finalidade comandar um computador que irá tratar os dados.


*Estruturas condicionais e operadores:

Condicional:
Dado a condição de um estado de um pessoa ou coisa existe uma condição para aquilo acontecer.

Operadores lógicos:
And - e
Or - ou                    ⇒ Quando utilizar? P resp. simplificadas, V ou F
Not - não

And - Sempre verdadeiro quando as 2 condições são satisfeitas.
Or - Sempre uma das condições deve ser a verdadeira. Ex. A ou B
Not - Operador de negação, inverso do resultado lógico.


*Estrutura de repetição:

O programa vai repetir até concluir o que precisa, mas cada repetição ocorre uma análise para verificar se precisa continuar a repetição ou se pode parar e concluir.
Ex. Um trabalhador vai cortar a grama alta, o programa determina que apare a grama até ela ficar baixa, a cada mão de corte, vai fazer análise para ver se precisa cortar mais até concluir que foi cortado e parar o serviço/programa.

*Vetores e matrizes:

Um vetor é caracterizado por uma variável dimensionado com tamanho pré-fixado.
Uma matriz é uma tabela organizada em linhas e colunas no formato x n, onde m representa o número de linha (horizontal) e n número de colunas (vertical).

*O que são funções?
Similar ao conceito de função matemático. São blocos de instruções que realizam tarefas específicas. Identificados por nomes e parâmetros. Permite reutilizar código.


*Instruções de entrada/saída:

Conjunto de dados, que no computador posso processar e imprimir um resultado.

Entrada - Consiste na inserção e recebimento de dados do mundo real por meio de ação de alguma interface, seja teclado, mouse, arquivos, entre outros.

Saída - Consiste na impressão dos dados do mundo abstrato, digital por meio de ação de alguma interface. Os formatos podem variar desde simples arquivos binários até complexa queyr de bancos de dados.
Existem 2 tipos:
Saída programada - Pode ser condicional ou incondicional.
Saída por interrupção - Definida pelo periférico, quando acontece algo que interrompe a execução e imprime um resultado.

*Introdução à linguagens de programação:

O que é uma linguagem de programação?
Método padronizado composto por um conjunto de regras sintáticas e semântica de implementação de um código fonte.

*Como um computador entende o programa?
Um código fonte, pode ser por tradução ou interpretação.

Tradução        ⇒   (1) Geração do programa objeto
                             (2) Execução do programa objeto

Interpretação  ⇒   Programa fonte executado diretamente


*Características de um programa:
Desenvolvimento de programas (Diretrizes)

Legibilidade - Facilidade de leitura, compreensão, ortogonalidade (coerência nas instruções) e definição adequada das estruturas..

Redigibilidade - Facilidade de escrita de código, pode conflitar com a legibilidade, ortogonalidade, simplicidade da escrita, suporte à abstração, reuso de código e expressividade.

Confiabilidade - Fazer o que foi programado para fazer. Verificação de tipos, trata exceções, uso de ponteiro e compatibilidade entre compiladores

Custo - Análise de impacto, treinamento, codificação, compilação, execução e infra-estrutura

Outras características: Atualizações, Uso de IA, Disponibilidade de ferramentas, Comunidade ativa e Adoção pelo mercado.

*Análise de códigos:

Análise Léxica:
Conhecida como scanner/leitura, é a 1ª fase caracteres por caracteres

Particionar - identificar elementos denominados tokens.
Classificar - São identificadores, palavras reservadas, número, strings.
Eliminar - Caracteres em branco, comentários,...

Análise Sintática:
Componente do sistema linguístico que interliga os constituintes da sentença, atribuindo-lhe uma estrutura. Padrão-gramática, depende da linguagem de programação utilizada. Forma que define qual é a estrutura relacionada da codificação, dentro daquela linguagem específica, define a corretude do programa.

Análise semântica:
É o estudo do significado. Incide sobre a relação entre significante, como: palavras, frases, sinais e símbolos. Erro de semântica: não faz o que é esperado. Lógica do programa.

*Paradigmas de programação:
É a forma de resolução de problemas com diretrizes e limitações específicas de cada paradigma utilizando linguagem de programação.

PE Paradigma estruturado:
Ênfase em sequência, Decisão (teste lógico) e Interação (Funções, laços, condições).
utilização, problemas simples e diretos, aprender programação.

POO Paradigma Orientação à objeto:
Paradigma de programação baseado na utilização de objetos e suas interações. Análogo ao mundo real.

O que é um objeto?
Um objeto é descrito por características específicas, comportamentos e estado.

Características específicas: O que tenho (Atributos) - modelo, cor, carga, corpo, tampa, ponta.
Comportamentos: Sou capaz de fazer (métodos) - escrever, desenhar, rabiscar, pintar, destampar.
Estado: Como faço (Estados) - Tampada, destampada, em uso.

Por fim, na prática foi utilizado o Portugol para fazer exercícios de programação.
